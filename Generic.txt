Generic 
-------

In C#, generic means not specific to a particular data type.
we can declare generic classes,interface,delegates,fields,methods using type parameter and without the specific data type
Type parameter is a placeholder for a particular type specified when an instance of generic type 


Declaration of generic type
---------------------------

Specifying the type parameter in an angular brackets after the type name 
e.g. syntax = TypeName<T> where T is a type parameter.


Generic Constraints
-------------------

C# allows you to use constraints to restrict client code to specify certain types while instantiating generic types.
You can specify one or more constraints on the generic type using the where clause after the generic type name.

GenericTypeName<T> where T  : contraint1, constraint2

where T : IComparable = implements IComparable interface
where T : class = The type argument must be a nullable or non-nullable class, interface, delegate, or array type.
where T : struct = The type argument must be non-nullable value types such as primitive data types int, char, bool, float, etc.
where T : new() = The type argument must be a reference type which has a public parameterless constructor. 


SAFCdszcasfc
aDXASdX





